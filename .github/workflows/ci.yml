# name: CI Pipeline

# on:
#     push:
#         branches:
#             - main # กำหนดให้ Pipeline ทำงานเมื่อมีการ push ไปยัง branch main

# jobs:
#     build: # ชื่อของ job (job ID)
#         runs-on: ubuntu-latest # กำหนดให้รันบนระบบปฏิบัติการ Ubuntu ล่าสุด

#         steps:
#             - name: Checkout code # ขั้นตอนที่ 1: ดาวน์โหลดโค้ดจาก repository
#               uses: actions/checkout@v3

#             - name: Set up Node.js # ขั้นตอนที่ 2: ติดตั้ง Node.js
#               uses: actions/setup-node@v3
#               with:
#                   node-version: "18" # ใช้ Node.js เวอร์ชัน 18

#             - name: Install dependencies # ขั้นตอนที่ 3: ติดตั้ง dependencies
#               run: npm install

#             - name: Run tests # ขั้นตอนที่ 4: รันการทดสอบ
#               run: npm test

# -------------------------------------------------------------

name: CI with SonarCloud # ชื่อ Workflow ที่จะแสดงในแท็บ Actions

on:
    push:
        branches:
            - main # ทำงานเมื่อมีการ push ไปยัง branch main
    pull_request:
        types: [opened, synchronize, reopened] # ทำงานเมื่อมีการสร้างหรืออัปเดต PR

jobs:
    build:
        name: Build and Analyze # ชื่องานที่จะทำใน workflow นี้
        runs-on: ubuntu-latest # ใช้ runner ที่เป็น Ubuntu version ล่าสุด

        steps:
            - name: Checkout code
              uses: actions/checkout@v3 # ดึงโค้ดจาก GitHub repository
              with:
                  fetch-depth: 0 # ดึง commit history ทั้งหมด เพื่อให้ Sonar วิเคราะห์ new code ได้ถูกต้อง

            - name: Set up Node.js
              uses: actions/setup-node@v3 # ติดตั้ง Node.js บน runner
              with:
                  node-version: "18" # ระบุเวอร์ชัน Node.js ที่ต้องการใช้

            - name: Install dependencies
              run: npm install # ติดตั้ง dependencies จาก package.json

            - name: Run tests
              run: npm test # รัน unit tests (ควรมี coverage report ด้วย)

            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@v2 # ใช้ Action ของ SonarCloud สำหรับสแกนโค้ด
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # ใช้ token ที่เก็บไว้ใน GitHub Secret
              with:
                  projectBaseDir: . # ระบุ root ของโปรเจคที่มีไฟล์ sonar-project.properties
